class-dump: /Applications/OmniWeb.app/Contents/PlugIns/Preferences.plugin/Contents/MacOS/Preferences

/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

typedef struct {
    unsigned int writingDefaults:1;
} CDAnonymousStruct1;

/*
 * File: /Applications/OmniWeb.app/Contents/PlugIns/Preferences.plugin/Contents/MacOS/Preferences
 * Arch: PowerPC (ppc)
 */

@interface OWBookmarkPreferences : OAPreferenceClient
{
    NSMatrix *showBookmarksInMatrix;
    NSPopUpButton *changeFlaggingFrequencyDefaultPopUpButton;
    OWBookmarkFolderPopUpController *bookmarkFolderPopUpController;
    NSButton *enableAddBookmarkSheetButton;
    NSMatrix *filingOrderMatrix;
    NSButton *publishBookmarksButton;
    NSMatrix *syncServerMatrix;
    NSTextField *syncServerField;
}

- (void)dealloc;
- (void)awakeFromNib;
- (void)willBecomeCurrentPreferenceClient;
- (void)resignCurrentPreferenceClient;
- (void)updateUI;
- (void)setValueForSender:(id)fp8;
- (void)openDotMacPrefs:(id)fp8;

@end

@interface OWBookmarkPreferences (Private)
- (void)_resetSyncPrefsIfNeeded;
@end

@interface OWBookmarkPreferences (NotificationsDelegatesDatasources)
- (void)defaultBookmarkFolderHasChanged:(id)fp8;
- (void)serverSyncFailed:(id)fp8;
@end

@interface OWDownloadPreferences : OAPreferenceClient
{
    NSPopUpButton *downloadDestinationPopupButton;
    NSPopUpButton *downloadExpirationPopupButton;
    NSButton *showPanelButton;
    NSButton *raisePanelButton;
    NSButton *closePanelButton;
    NSButton *autoOpenButton;
    NSWindow *safeApplicationsSheet;
    NSTableView *safeAppsTable;
    NSButton *removeAppButton;
    NSMutableArray *safeApplications;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)updateUI;
- (void)setValueForSender:(id)fp8;
- (void)_chooseDownloadDestinationSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)addApplication:(id)fp8;
- (void)openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)removeSelectedApplication:(id)fp8;
- (void)configureSafeApplications:(id)fp8;
- (void)okConfigureSafeApplications:(id)fp8;
- (void)tableView:(id)fp8 willDisplayCell:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableViewSelectionDidChange:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (unsigned int)tableView:(id)fp8 validateDrop:(id)fp12 proposedRow:(int)fp16 proposedDropOperation:(int)fp20;
- (BOOL)tableView:(id)fp8 acceptDrop:(id)fp12 row:(int)fp16 dropOperation:(int)fp20;

@end

@interface OWDownloadPreferences (Private)
- (void)_configureSafeApplicationsSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (id)_applicationNameFromPath:(id)fp8;
- (void)_addApplications:(id)fp8;
- (void)_readApplicationsFromDefaults;
- (void)_saveApplicationsToDefaults;
- (id)_dictionaryForBundleIdentifier:(id)fp8 shouldCreate:(BOOL)fp12;
@end

@interface OWHistoryPreferences : OAPreferenceClient
{
    NSButton *persistentSaveButton;
    NSButton *persistentTimeoutAfterDaysButton;
    NSTextField *persistentDaysTextField;
    NSButton *justTheWordDaysButton;
    NSTextField *limitDiskCacheTextField;
    NSPopUpButton *validateContentPopUpButton;
}

- (void)updateUI;
- (void)setValueForSender:(id)fp8;
- (void)awakeFromNib;
- (void)clearHistory:(id)fp8;

@end

@interface OWHistoryPreferences (Private)
- (void)updateTimeoutCellAndField;
@end

@interface OWGeneralPreferences : OAPreferenceClient
{
    NSPopUpButton *defaultBrowserPopup;
    NSPopUpButton *defaultNewsReaderPopup;
    NSMatrix *startPageMatrix;
    NSTextField *startPageLocationField;
    OWAddressWell *startPageAddressWell;
    NSMatrix *tabBehaviorMatrix;
    NSTextField *tabBehaviorHelpField;
    NSButton *useFaviconsButton;
    NSButton *autocompleteButton;
    NSButton *navBySpeechButton;
    NSArray *startPages;
    NSSet *cachedBrowsersSet;
    NSSet *cachedReadersSet;
    NSMutableDictionary *cachedBrowserItems;
    NSMutableDictionary *cachedReaderItems;
}

- (id)initWithTitle:(id)fp8 defaultsArray:(id)fp12 controller:(id)fp16;
- (void)dealloc;
- (void)awakeFromNib;
- (void)restoreDefaultsNoPrompt;
- (BOOL)haveAnyDefaultsChanged;
- (void)updateUI;
- (void)setValueForSender:(id)fp8;

@end

@interface OWGeneralPreferences (Private)
- (id)_defaultBrowserURLFromCache:(BOOL)fp8;
- (id)_defaultBrowserURL;
- (id)_defaultReaderURLFromCache:(BOOL)fp8;
- (id)_defaultReaderURL;
- (id)_mainBundleURL;
- (void)_selectCurrentDefaultApplicationForPopup:(id)fp8;
- (void)_makeDefaultBrowser:(id)fp8;
- (void)_makeDefaultNewsReader:(id)fp8;
- (void)_buildPopupFromCachedSet:(id)fp8;
- (id)_popupItemForURL:(id)fp8 otherItems:(id)fp12;
- (int)_tagForStartPage;
@end

@interface OWGeneralPreferences (NotificationsDelegatesDatasources)
- (void)popUpButtonWillPopUp:(id)fp8;
- (void)openPanelDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(id)fp16;
- (BOOL)control:(id)fp8 textShouldBeginEditing:(id)fp12;
- (BOOL)control:(id)fp8 textView:(id)fp12 doCommandBySelector:(SEL)fp16;
@end

@interface OWHTMLPreferences : OAPreferenceClient
{
    NSButton *incrementalDisplayButton;
    NSButton *drawColorPlaceholdersWhileLoadingImagesButton;
    NSButton *highlightClickedLinksButton;
    NSButton *openPDFInBrowserButton;
}

- (void)updateUI;
- (void)setValueForSender:(id)fp8;

@end

@interface OWHTMLSourcePreferences : OAPreferenceClient
{
    NSTabView *tabView;
    NSView *localServerInitialFirstResponder;
    NSView *localServerLastKeyView;
    NSButton *formatOnLoadButton;
    NSTextField *indentTextfield;
    OAFontView *sourceFont;
    NSButton *colorOnLoadButton;
    NSColorWell *textWell;
    NSColorWell *commentWell;
    NSColorWell *entityWell;
    NSColorWell *tagWell;
    NSColorWell *attributeWell;
    NSColorWell *valueWell;
    NSColorWell *preformattedWell;
    NSColorWell *backgroundWell;
    NSButton *requireEndTagsButton;
    NSMatrix *mismatchedMatrix;
    NSColorWell *mismatchedWell;
    NSMatrix *unrecognizedMatrix;
    NSColorWell *unrecognizedWell;
    NSTextField *localServerSuffixTextField;
    NSTextField *localServerDirectoryTextField;
    NSTextField *localServerIndexFileTextField;
    NSTextField *localServerUserDirectoryTextField;
}

- (void)awakeFromNib;
- (void)dealloc;
- (void)fontView:(id)fp8 didChangeToFont:(id)fp12;
- (void)updateUI;
- (void)setValueForSender:(id)fp8;
- (void)valuesHaveChanged;
- (void)pickLocalServerDirectory:(id)fp8;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;

@end

@interface OWShortcutPreferences : OAPreferenceClient
{
    NSTableView *shortcutTableView;
    NSTableView *parameterTableView;
    NSButton *removeShortcutsButton;
    NSTextField *longNameField;
    NSTextField *nameField;
    NSTextField *urlField;
    NSMatrix *methodMatrix;
    NSMutableDictionary *shortcutDictionary;
    NSMutableArray *shortcutKeys;
    NSDictionary *parameters;
    CDAnonymousStruct1 flags;
}

+ (void)initialize;
- (void)dealloc;
- (void)awakeFromNib;
- (void)addShortcut:(id)fp8;
- (void)removeSelectedShortcuts:(id)fp8;
- (void)setLongName:(id)fp8;
- (void)setName:(id)fp8;
- (void)setURL:(id)fp8;
- (void)setMethod:(id)fp8;
- (void)updateUI;
- (void)restoreDefaultsNoPrompt;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 deleteRows:(id)fp12;
- (void)tableViewSelectionDidChange:(id)fp8;
- (id)debugDictionary;

@end

@interface OWShortcutPreferences (Private)
- (void)_readDefaults;
- (void)_writeDefaults;
- (void)_updateUI;
- (void)_deleteShortcutRows:(id)fp8;
- (id)_selectedShortcut;
- (id)_selectedShortcuts;
- (id)_parametersForSelectedShortcut;
- (id)_longNameForSelectedShortcut;
- (id)_longNameForShortcutKey:(id)fp8;
- (void)_setLongNameForSelectedShortcut:(id)fp8;
- (id)_nameForSelectedShortcut;
- (void)_setNameForSelectedShortcut:(id)fp8;
- (id)_urlForSelectedShortcut;
- (void)_setURLForSelectedShortcut:(id)fp8;
- (int)_methodForSelectedShortcut;
- (void)_setMethodForSelectedShortcut:(int)fp8;
@end

@interface OWShortcutPreferences (NotificationsDelegatesDatasources)
- (void)shortcutsDidChange:(id)fp8;
@end

@interface OWFormAutoFillPreferences : OAPreferenceClient
{
    NSTabView *tabView;
    NSButton *autoSaveCheckbox;
    NSButton *useKeychainCheckbox;
    NSTableView *fillSetTableView;
    NSButton *removeSetButton;
    NSOutlineView *autoFillTableView;
    NSButton *removeKeysButton;
    NSButton *configureSynonymsButton;
    OWFormAutocompletePreferences *completePreferences;
    NSView *autocompleteLastKeyView;
    NSView *autocompleteInitialFirstResponder;
    NSWindow *synonymsSheet;
    NSTableView *synonymTableView;
    NSButton *removeSynonymButton;
    NSString *nonretainedReferenceKey;
    NSMutableArray *synonyms;
    NSMutableDictionary *nonretainedLocalizationsDictionary;
    NSArray *sortedSets;
    NSMutableArray *topLevelItemDictionaries;
    NSMutableArray *_seenKeys;
    CDAnonymousStruct1 flags;
}

- (void)awakeFromNib;
- (id)initWithTitle:(id)fp8 defaultsArray:(id)fp12 controller:(id)fp16;
- (void)dealloc;
- (void)addSet:(id)fp8;
- (void)removeSet:(id)fp8;
- (void)setValueForSender:(id)fp8;
- (void)addAutoFillKey:(id)fp8;
- (void)removeSelectedAutoFillKeys:(id)fp8;
- (void)configureSynonyms:(id)fp8;
- (void)addSynonym:(id)fp8;
- (void)cancelConfigureSynonymsSheet:(id)fp8;
- (void)okConfigureSynonymsSheet:(id)fp8;
- (void)willBecomeCurrentPreferenceClient;
- (void)resignCurrentPreferenceClient;
- (void)updateUI;
- (id)defaults;
- (id)outlineView:(id)fp8 child:(int)fp12 ofItem:(id)fp16;
- (BOOL)outlineView:(id)fp8 isItemExpandable:(id)fp12;
- (int)outlineView:(id)fp8 numberOfChildrenOfItem:(id)fp12;
- (id)outlineView:(id)fp8 objectValueForTableColumn:(id)fp12 byItem:(id)fp16;
- (void)outlineView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 byItem:(id)fp20;
- (BOOL)outlineView:(id)fp8 shouldEditTableColumn:(id)fp12 item:(id)fp16;
- (void)outlineViewSelectionDidChange:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (BOOL)tableView:(id)fp8 shouldEditTableColumn:(id)fp12 row:(int)fp16;
- (BOOL)tableViewShouldEditNextItemWhenEditingEnds:(id)fp8;
- (void)tableViewSelectionDidChange:(id)fp8;
- (void)tableView:(id)fp8 deleteRows:(id)fp12;
- (void)tabView:(id)fp8 didSelectTabViewItem:(id)fp12;

@end

@interface OWFormAutoFillPreferences (Private)
- (id)_selectedSet;
- (id)_itemsForDictionary:(id)fp8;
- (BOOL)_itemIsEditable:(id)fp8;
- (void)_configureSynonymsSheetDidEnd:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;
- (void)_updateSets;
- (void)_updateCurrentSet;
- (void)_autoFillSetsChanged:(id)fp8;
- (void)_autoFillCurrentSetDidUpdate:(id)fp8;
- (id)_localizedReferenceKeyFromString:(id)fp8;
- (BOOL)_allowedToEditRow:(int)fp8;
@end

@interface OWTabPreferences : OAPreferenceClient
{
    NSMatrix *tabDrawerSideMatrix;
    NSPopUpButton *getURLBehaviorPopUp;
    NSPopUpButton *openLinksToOtherSitesPopUp;
    NSButton *openNewWindowLinksInTabsButton;
    NSPopUpButton *openCommandClickedLinksPopUp;
    NSTextField *commandClickHelperField;
    NSTextField *commandShiftClickHelperField;
    NSButton *showAtStartupButton;
    NSButton *dontShowOnReopenButton;
    NSButton *warnOnCloseButton;
}

- (void)updateUI;
- (void)setValueForSender:(id)fp8;

@end

@interface OWFormAutocompletePreferences : OFObject
{
    NSButton *useAutocompletionCheckbox;
    NSButton *autocompletionSaveCheckbox;
    NSPopUpButton *maxCompletionsPopUpButton;
    NSTableView *completionsTableView;
    NSButton *removeTermButton;
    NSButton *addTermButton;
    OWFormAutoFillPreferences *preferenceClient;
    OWTextInputCompletionController *sharedTextInputCompletionController;
    NSArray *completionTerms;
    NSNumber *sortOrder;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)addCompletion:(id)fp8;
- (void)removeCompletion:(id)fp8;
- (void)setValueForSender:(id)fp8;
- (void)updateUI;
- (void)completionsChanged:(id)fp8;
- (int)numberOfRowsInTableView:(id)fp8;
- (id)tableView:(id)fp8 objectValueForTableColumn:(id)fp12 row:(int)fp16;
- (void)tableView:(id)fp8 setObjectValue:(id)fp12 forTableColumn:(id)fp16 row:(int)fp20;
- (void)tableView:(id)fp8 didClickTableColumn:(id)fp12;
- (void)tableViewSelectionDidChange:(id)fp8;

@end

@interface OWFormAutocompletePreferences (Private)
- (void)_updateTerms;
- (void)_rebuildSortOrderings;
@end

@interface OWSecuritySitePreferences : OWGlobalSitePreferenceClient
{
}

@end

@interface OWLanguagesSitePreferences : OWGlobalSitePreferenceClient
{
}

@end

@interface OWAdBlockingSitePreferences : OWGlobalSitePreferenceClient
{
}

@end

@interface OWPageAppearanceSitePreferences : OWGlobalSitePreferenceClient
{
}

@end

@interface OWOtherSitePreferences : OWGlobalSitePreferenceClient
{
}

@end

@interface OWGlobalSitePreferenceClient : OAPreferenceClient
{
    NSTabViewItem *tabViewItem;
}

- (id)initWithPreferenceClientRecord:(id)fp8 controller:(id)fp12;
- (void)dealloc;
- (void)updateUI;
- (void)setValueForSender:(id)fp8;

@end

